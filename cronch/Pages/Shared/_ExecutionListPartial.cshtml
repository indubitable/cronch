@model List<Models.ViewModels.ExecutionViewModel>

@{
    Func<Models.ExecutionStatus, object> RenderStatus =
    @<td class="text-center">
                @switch(item)
        {
            case Models.ExecutionStatus.Running:
                        <span class="badge text-bg-secondary">Running</span>
                break;
            case Models.ExecutionStatus.CompletedAsSuccess:
                        <span class="badge text-bg-success">Success</span>
                break;
            case Models.ExecutionStatus.CompletedAsError:
                        <span class="badge text-bg-danger">Error</span>
                break;
            case Models.ExecutionStatus.CompletedAsWarning:
                        <span class="badge text-bg-warning">Warning</span>
                break;
            default:
                        <span class="badge text-bg-dark">Indeterminate</span>
                break;
        }
            </td>;
}

<script type="text/javascript">
    function navigateToExecution(id) {
        window.location.href = `/ExecutionDetails/${id}`;
    }
</script>

<table class="table table-striped table-hover text-start">
    <thead>
        <tr>
            <th>Name</th>
            <th>Start time</th>
            <th>Run time</th>
            <th class="text-center">Result</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var vm in Model)
        {
            <tr class="clickable-row" onclick="navigateToExecution('@vm.ExecutionId')">
                <td>@vm.JobName</td>
                <td>@vm.StartedOn.ToLocalTime().ToString("G")</td>
                <td>@(vm.CompletedOn.HasValue || vm.Status == Models.ExecutionStatus.Running ? vm.FormattedDuration : "N/A")</td>
                @RenderStatus(vm.Status)
            </tr>
        }
    </tbody>
</table>
