@model cronch.Models.ViewModels.JobViewModel

<div class="container text-start px-5">
    <div asp-validation-summary="All" class="rounded border border-2 border-danger"></div>
    <form method="post">
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="Name" class="form-label"></label>
                    <input bs5-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">Choose a meaningful name for this job</div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="form-check flex-fill">
                    <input bs5-for="Enabled" class="form-check-input" />
                    <label asp-for="Enabled" class="form-check-label"></label>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">Whether this job will be immediately enabled after saving</div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="CronSchedule" class="form-label"></label>
                    <input bs5-for="CronSchedule" class="form-control cron-schedule-input" />
                    <span asp-validation-for="CronSchedule" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    <a target="_blank" href="https://github.com/HangfireIO/Cronos#cron-format">A six-part (with seconds) cron expression</a>
                    <br /><br />
                    Quick choices:
                    <a href="#" onclick="document.querySelector('.cron-schedule-input').value='*/30 * * * * *'; return false;">Every 30 seconds</a>
                    |
                    <a href="#" onclick="document.querySelector('.cron-schedule-input').value='0 * * * * *'; return false;">Every minute</a>
                    |
                    <a href="#" onclick="document.querySelector('.cron-schedule-input').value='0 0 0 * * MON-FRI'; return false;">At midnight Monday-Friday</a>
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="Script" class="form-label"></label>
                    <textarea bs5-for="Script" rows="15" class="form-control font-monospace fs-7"></textarea>
                    <span asp-validation-for="Script" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    The script to run, executed by the executor (see below)
                    <br /><br />
                    The following environment variables are available:
                    <br />
                    <ul>
                        <li><code>CRONCH_JOB_ID</code> - job ID</li>
                        <li><code>CRONCH_JOB_NAME</code> - job name</li>
                        <li><code>CRONCH_EXECUTION_ID</code> - execution ID</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="Executor" class="form-label"></label>
                    <input bs5-for="Executor" class="form-control executor-input" />
                    <span asp-validation-for="Executor" class="text-danger"></span>

                    <br /><br />

                    <label bs5-for="ExecutorArgs" class="form-label"></label>
                    <input bs5-for="ExecutorArgs" class="form-control executor-args-input" />
                    <span asp-validation-for="ExecutorArgs" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    <partial name="_ExecutorFormHelpPartial" />
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="ScriptFilePathname" class="form-label"></label>
                    <input bs5-for="ScriptFilePathname" class="form-control" />
                    <span asp-validation-for="ScriptFilePathname" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    <strong>[DANGEROUS!]</strong> Optional - the relative or absolute name of the script file that will be executed by the executor (above) and will contain the script contents (above)
                    <br /><br />
                    This can be useful for, e.g., ensuring that a Windows batch file always has a <code>.bat</code> extension.
                    <br /><br />
                    If specified, the same filename will be used for every execution of this job. Parallel executions could, then, result in the script file being unexpectedly deleted or overwritten during a previous execution, leading to errors.
                    <br /><br />
                    To make this safer, use <code>{0}</code> inside the filename, which will then be replaced by a randomly generated name. Note, new directories will not be created automatically, so specifying <code>{0}</code> in the path before the filename will result in an error.
                    <br /><br />
                    If left empty, a randomly generated filename will be created in the default script file location, as configured in Settings.
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="TimeLimitSecs" class="form-label"></label>
                    <input bs5-for="TimeLimitSecs" class="form-control" />
                    <span asp-validation-for="TimeLimitSecs" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    Optional - how long to permit the job to execute before forcefully killing it
                    <br /><br />
                    If left empty, no time limit will be enforced. If set to 0, the job will be killed immediately.
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="Parallelism" class="form-label"></label>
                    <input bs5-for="Parallelism" class="form-control" />
                    <span asp-validation-for="Parallelism" class="text-danger"></span>

                    <br /><br />

                    <label asp-for="MarkParallelSkipAs" class="form-label"></label>
                    <select bs5-for="MarkParallelSkipAs" bs5-items="cronch.Models.ViewModels.JobViewModel.ParallelSkipProcessingOptions" class="form-select"></select>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">
                    Optional - limit the number of parallel executions of this job
                    <br /><br />
                    If left empty, no limit will be enforced. Setting this to 1 means that only one execution of this job is allowed at a time.
                    <br /><br />
                    The drop-down selection allows for control over how to log (or not log) the skipping of executions due to the parallelism limit.
                </div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label bs5-for="Keywords" class="form-label"></label>
                    <input bs5-for="Keywords" class="form-control" />
                    <span asp-validation-for="Keywords" class="text-danger"></span>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">Optional - comma-separated list of keywords to look for in standard out and/or standard error processing (see below)</div>
            </div>
        </div>
        <div class="row gx-5">
            <hr />
        </div>
        <div class="row gx-5">
            <div class="col mb-3 d-flex align-items-center">
                <div class="flex-fill">
                    <label asp-for="StdOutProcessing" class="form-label"></label>
                    <select bs5-for="StdOutProcessing" bs5-items="cronch.Models.ViewModels.JobViewModel.OutputProcessingOptions" class="form-select"></select>

                    <br /><br />

                    <label asp-for="StdErrProcessing" class="form-label"></label>
                    <select bs5-for="StdErrProcessing" bs5-items="cronch.Models.ViewModels.JobViewModel.OutputProcessingOptions" class="form-select"></select>
                </div>
            </div>
            <div class="col mb-3 d-flex align-items-center">
                <div class="shadow p-3 bg-body-tertiary rounded flex-fill">How to interpret the contents of stdout and stderr after each run</div>
            </div>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>
        <br /><br />
    </form>
</div>
